{"version":3,"sources":["components/Header.tsx","helpers/todoReducer.tsx","components/TodoAdd.tsx","hooks/useForm.tsx","components/TodoList.tsx","components/TodoApp.tsx","App.tsx","index.tsx"],"names":["Header","title","className","initialState","id","Date","getTime","desc","done","todoReducer","state","action","type","payload","filter","todo","map","TodoAdd","handleAddTodo","useState","values","setValues","target","name","value","useForm","description","handleInputChange","reset","onSubmit","e","preventDefault","trim","length","newToDo","htmlFor","placeholder","onChange","autoComplete","TodoList","handleDelete","handleToggle","i","onClick","init","getItemLocalStorage","localStorage","getItem","JSON","parse","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","newTodo","todoId","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.828d44ae.chunk.js","sourcesContent":["type TitleProps = {\r\n  title: string;\r\n};\r\n\r\nexport const Header = ({ title }: TitleProps) => {\r\n  return (\r\n    <header className=\"bg-gray-900\">\r\n      <nav>\r\n        <div className=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\r\n          <div className=\"relative flex items-center justify-center h-16 md:justify-start\">\r\n            <h1 className=\"text-4xl text-white font-bold uppercase text-center\">\r\n              {title}\r\n            </h1>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n","export const initialState = [\r\n  {\r\n    id: new Date().getTime(),\r\n    desc: \"Learn Reactjs\",\r\n    done: false,\r\n  },\r\n];\r\n\r\ntype ACTIONTYPE =\r\n  | {\r\n      type: \"add\";\r\n      payload: { id: number; desc: string; done: boolean };\r\n    }\r\n  | { type: \"delete\"; payload: { id: number; desc: string; done: boolean } }\r\n  | { type: \"toggle\"; payload: { id: number; desc: string; done: boolean } };\r\n\r\nexport const todoReducer = (state: typeof initialState, action: ACTIONTYPE) => {\r\n  switch (action.type) {\r\n    case \"add\":\r\n      return [...state, action.payload];\r\n    case \"delete\":\r\n      return state.filter((todo: any) => todo.id !== action.payload);\r\n    case \"toggle\":\r\n      return state.map((todo: any) =>\r\n        todo.id === action.payload ? { ...todo, done: !todo.done } : todo\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { useForm } from \"../hooks/useForm\";\r\n\r\ntype PropsAdd = {\r\n  handleAddTodo: any;\r\n};\r\n\r\nexport const TodoAdd = ({ handleAddTodo }: PropsAdd) => {\r\n  const [{ description }, handleInputChange, reset] = useForm({\r\n    description: \"\",\r\n  });\r\n\r\n  const handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n\r\n    if (description.trim().length <= 1) {\r\n      return;\r\n    }\r\n\r\n    const newToDo = {\r\n      id: new Date().getTime(),\r\n      desc: description,\r\n      done: false,\r\n    };\r\n\r\n    handleAddTodo(newToDo);\r\n    reset();\r\n  };\r\n  return (\r\n    <form className=\"mb-6 my-3\" onSubmit={handleSubmit}>\r\n      <div className=\"flex flex-col mb-4\">\r\n        <label\r\n          className=\"mb-2 text-lg font-bold text-grey-darkest\"\r\n          htmlFor=\"todo\"\r\n        >\r\n          Description:\r\n        </label>\r\n        <input\r\n          className=\"border py-2 px-3 text-grey-darkest\"\r\n          type=\"text\"\r\n          name=\"description\"\r\n          id=\"todo\"\r\n          placeholder=\"add new to-do\"\r\n          onChange={handleInputChange}\r\n          value={description}\r\n          autoComplete=\"off\"\r\n        />\r\n      </div>\r\n      <button\r\n        type=\"submit\"\r\n        className=\"mt-5 w-full text-white uppercase p-3 rounded font-bold transition duration-200 ease-in-out bg-gray-600 hover:bg-gray-900 transform hover:-translate-y-1 hover:scale-60\"\r\n      >\r\n        Add\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState: any) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const reset = () => {\r\n    setValues(initialState);\r\n  };\r\n\r\n  const handleInputChange = ({ target }: any) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  return [values, handleInputChange, reset];\r\n};\r\n","type TodoProps = {\r\n  todo: any;\r\n  handleDelete: any;\r\n  handleToggle: any;\r\n};\r\n\r\nexport const TodoList = ({ todo, handleDelete, handleToggle }: TodoProps) => {\r\n  return (\r\n    <ul className=\"list-group list-group-flush\">\r\n      {todo.map((todo: any, i: number) => (\r\n        <li key={todo.id} className=\"list-group-item my-3 flex justify-between\">\r\n          <p\r\n            className={`${todo.done && \"line-through\"} cursor-pointer`}\r\n            onClick={() => handleToggle(todo.id)}\r\n          >\r\n            {i + 1}. {todo.desc}\r\n          </p>\r\n          <button onClick={() => handleDelete(todo.id)}>&#10060;</button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n","import { useEffect, useReducer } from \"react\";\r\nimport { todoReducer, initialState } from \"../helpers/todoReducer\";\r\nimport { TodoAdd } from \"./TodoAdd\";\r\nimport { TodoList } from \"./TodoList\";\r\n\r\nconst init = () => {\r\n  const getItemLocalStorage: any = localStorage.getItem(\"to-do\");\r\n  return JSON.parse(getItemLocalStorage) || [];\r\n};\r\n\r\nexport const TodoApp = () => {\r\n  const [todo, dispatch] = useReducer(todoReducer, initialState, init);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"to-do\", JSON.stringify(todo));\r\n  }, [todo]);\r\n\r\n  const handleDelete = (todoId: any) => {\r\n    dispatch({\r\n      type: \"delete\",\r\n      payload: todoId,\r\n    });\r\n  };\r\n\r\n  const handleToggle = (todoId: any) => {\r\n    dispatch({\r\n      type: \"toggle\",\r\n      payload: todoId,\r\n    });\r\n  };\r\n\r\n  const handleAddTodo = (newTodo: any) => {\r\n    dispatch({\r\n      type: \"add\",\r\n      payload: newTodo,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <main className=\"container mx-auto px-5 mt-3 max-w-7xl sm:px-6 lg:px-8\">\r\n      <h2 className=\"text-xl mt-5 text-black font-bold uppercase\">\r\n        Add your new to-do &#128204; ({todo.length})\r\n      </h2>\r\n      <hr />\r\n      <TodoAdd handleAddTodo={handleAddTodo} />\r\n      <div className=\"col-7\">\r\n        <h2 className=\"mb-2 font-bold text-lg text-grey-darkest uppercase\">\r\n          To-do list:\r\n        </h2>\r\n        <TodoList\r\n          todo={todo}\r\n          handleDelete={handleDelete}\r\n          handleToggle={handleToggle}\r\n        />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n","import { Header } from \"./components/Header\";\nimport { TodoApp } from \"./components/TodoApp\";\n\nfunction App() {\n  return (\n    <>\n      <Header title=\"jdb to-do\" />\n      <TodoApp />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./assets/main.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}